local SyntaxKind = require "lunar.ast.syntax_kind"
local SyntaxNode = require "lunar.ast.syntax_node"
local MemberExpression = require "lunar.ast.exprs.member_expression"
local FunctionCallExpression = require "lunar.ast.exprs.function_call_expression"
local TableLiteralExpression = require "lunar.ast.exprs.table_literal_expression"
local Identifier = require "lunar.ast.exprs.identifier"
local VariableStatement = require "lunar.ast.stats.variable_statement"
local AssignmentStatement = require "lunar.ast.stats.assignment_statement"
local SelfAssignmentOpKind = require "lunar.ast.stats.self_assignment_op_kind"
local ConstructorDeclaration = require "lunar.ast.decls.constructor_declaration"
local MemberFieldDeclaration = require "lunar.ast.decls.member_field_declaration"

class ClassStatement << SyntaxNode
  constructor(identifier, super_identifier, members)
    super(SyntaxKind.class_statement)

    self.identifier = identifier
    self.super_identifier = super_identifier
    self.members = members
  end
end

return ClassStatement
